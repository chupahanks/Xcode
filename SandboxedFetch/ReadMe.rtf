{\rtf1\ansi\ansicpg1252\cocoartf1138
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww16480\viewh11560\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 SandboxedFetch Read Me\
\
================================================================================\
\
DESCRIPTION:\
\
Sample code showing how the security concept of least privilege separation\
can be implemented using App Sandboxing and XPC interprocess communication\
(IPC).  The goal of least privilege separation is to reduce the amount of\
code that runs with special privileges.  This is achieve in this sample\
code by splitting the application into separate processes, each with the\
least amount of privilege necessary to complete its job.\
\
App Sandbox is a Mac OS X security mechanism that controls a process'\
ability to acquire shared system resources including, but not limited\
to, shared files, network sockets, hardware devices, and address and\
calendar information.  An application opts into the App Sanbox by\
specifying, in its code signature, a list of entitlements.  These\
entitle the application to a set of privileges, such as using the camera\
device or communicating on the network.  The idea is to used the minimum\
set of entitlements for the application to do its job.\
\
SandboxedFetch is a simple remote file downloader and, optionally,\
file compressor.  Given a URL to a file it will download the file, \
compress using the GZIP file format[1] if the compress option is selected,\
and then prompt the user on the location the file is to be saved.  The\
application is split into three separate processes: the downloader\
service ("fetch_service.xpc"), the compressor service\
("zip_service.xpc"), and the user interface component.  All three\
components run in app sandboxes with different sets of entitlements.\
fetch_service.xpc uses the "com.apple.security.network.client"\
entitlement since it needs to communicate with a remote server to\
transfer the contents of the file.  The user interface uses the\
"com.apple.security.files.user-selected.read-write" entitlement to allow\
to write to file path selected by the user using the save panel dialog.\
Finally, the zip_service.xpc service doesn't need any entitlements to\
do its job of compressing the file data.  All of these components are\
packaged together into a single application bundle and communicate using\
the XPC IPC mechanism.\
\
For more information on application sandboxing please see the Code Signing\
and Application Sandboxing Guide.\
\
[1] RFC 1952, "GZIP file format specification version 4.3".\
\
================================================================================\
\
BUILD REQUIREMENTS:\
\
Mac OS X Version 10.7 Lion\
\
libcurl (included with Mac OS X 10.7 and used by fetch_service.xpc)\
\
libz (included with Mac OS X 10.7 and used by zip_service.xpc)\
\
The code signing certificate with the idenity of "3rd Party Mac Developer\
Application".  To create this certificate do the following:\
(1) Launch the Keychain Access utility.\
(2) Select Keychain Access->Certificate Assistant->Create a Certificate...\
    in the pull-down menu.\
(3) For the Name field enter "3rd Party Mac Developer Application".  For\
    the Certificate Type field select "Code Signing".  The Identity Type\
    should be "Self Signed Root".  Click on "Continue" and "Done" after\
    the certificate has been successfully created.\
\
For more information on application code signing please see the Code\
Signing and Application Sandboxing Guide.\
\
================================================================================\
\
RUNTIME REQUIREMENTS:\
\
Mac OS X Version 10.7 Lion\
\
libcurl.dylib (included with Mac OS X 10.7 and used by fetch_service.xpc)\
\
libz.dylib (included with Mac OS X 10.7 and used by zip_service.xpc)\
\
================================================================================\
\
PACKAGING LIST:\
\
Readme.txt                            Self (This file).\
\
SandboxedFetch.xcodeproj/             XCode project files\
\
SandboxedFetch/\
  main.m\
  SandboxedFetchAppDelegate.h\
  SandboxedFetchAppDelegate.m         User interface code\
\
  SandboxedFetch-Entitlements.plist   UI sandbox entitlements\
\
  en.lproj/\
  SandboxedFetch-Info.plist\
  SandboxedFetch-Prefix.pch           NIB, Info.plist, etc.\
\
fetch_service/\
   fetch_service.c                    Fetch downloader XPC service code\
\
   fetch_service-Entitlements.plist   fetch_service.xpc sandbox entitlements\
\
   en.lproj/\
   fetch_service-Info.plist\
   fetch_service-Prefix.pch           Info.plist, etc.\
\
zip_service/\
   zip_service.c                      GZIP file compressor XPC service code\
\
   zip_service-Entitlements.plist     zip_service.xpc sandbox entitlements\
\
   en.lproj/\
   fetch_service-Info.plist\
   fetch_service-Prefix.pch           Info.plist, etc.\
\
================================================================================\
\
CHANGES FROM PREVIOUS VERSIONS:\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 Version 1.1\
- Minor change for shipping version of Mac OS X v10.7.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural
\cf0 \
Version 1.0\
- First version\
\
================================================================================\
\
Copyright (C) 2011 Apple Inc. All rights reserved.\
}